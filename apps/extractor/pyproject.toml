[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "claude-readability-extractor"
version = "1.0.0"
description = "Content extraction service for claude-readability-hook"
authors = [
    {name = "Claude Readability Team"}
]
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "trafilatura>=1.12.0",
    "httpx>=0.28.0",
    "orjson>=3.10.0",
    "pydantic>=2.10.0",
    "hatchling"
]
requires-python = ">=3.13"
license = {text = "MIT"}
keywords = ["readability", "content-extraction", "fastapi"]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.8.0"
]

[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "RUF"
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "ARG002", # unused method argument
]

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"


[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]

[dependency-groups]
dev = [
    "ruff>=0.12.5",
]
